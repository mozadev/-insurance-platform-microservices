name: Deploy ingest-svc (Lambda container) - OIDC fix

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'services/ingest-svc/**'
      - 'shared/**'
      - '.github/workflows/deploy-ingest.yml'
      - 'infra/terraform/**'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || secrets.AWS_REGION || 'us-east-1' }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO: ${{ vars.ECR_REPO || secrets.ECR_REPO || 'ins-dev-ingest-svc' }}

jobs:
  build-push-and-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-deploy-ingest
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          aws: true

      - name: Build and push amd64 image (classic builder)
        id: build
        env:
          IMAGE: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:lambda-amd64-${{ github.sha }}
        run: |
          echo "IMAGE=${IMAGE}" >> $GITHUB_OUTPUT
          DOCKER_BUILDKIT=0 docker build --platform linux/amd64 -f services/ingest-svc/Dockerfile -t ${IMAGE} .
          docker push ${IMAGE}

      - name: Export IMAGE_URI
        id: img
        run: echo "IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:lambda-amd64-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: infra/terraform/envs/dev
        run: terraform init -input=false

      - name: Terraform Apply (update Lambda image)
        working-directory: infra/terraform/envs/dev
        run: terraform apply -auto-approve -input=false -var "lambda_image_uri=${{ steps.img.outputs.IMAGE_URI }}"


